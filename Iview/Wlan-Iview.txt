Wlan:
=====
- Scanning procedure in depth in ATH9k
- what is slave dfs and master dfs & How radar will detected in wlan devices
- Significance of regulatory domain in Wlan
- Channel switch announcement
- What is MLME State machine
- Connection procedure and frame exchange
- 4 way handshake
- Data and management path
- CSMA/CA and CSMA/CD
- MAC Access Modes and Timing
- QoS 11e/11n
- BlockAck
- power saving mechanism
- frame format beacon, probe request/response, auth_seq1/auth_seq2 &
  association request/response
- Difference in IEEE80211 standards a, b, g, n, ac, ax, ah
- What is short gaurd interval
- What is dcf, pcf concept
- What is difs, sifs and aifs
- How QoS packets are queu and transmitted
- Difference between AMSDU and AMPDU


Answers:
========
Scanning procedure in Wlan:
===========================
Several parameters are used in the scanning procedure. These parameters may be
specified by the user; many implementations have default values for these
parameters in the driver.

- BSSType
- BSSID
- SSID
- ScanType
- ChannelList
- ProbeDelay
- MinChannelTime and MaxChannelTime


BSSType (independent, infrastructure, or both)
----------------------------------------------
Scanning can specify whether to seek out independent ad hoc networks,
infrastructure networks, or all networks.

BSSID (individual or broadcast)
-------------------------------
The device can scan for a specific network to join (individual) or for any
network that is willing to allow it to join (broadcast). When 802.11 devices
are moving, setting the BSSID to broadcast is a good idea because the scan
results will include all BSSs in the area.

SSID ("network name")
---------------------
The SSID assigns a string of bits to an extended service set. Most products
refer to the SSID as the network name because the string of bits is commonly
set to a human-readable string. Clients wishing to find any network should
set this to the broadcast SSID.

ScanType (active or passive)
----------------------------
Active scanning uses the transmission of Probe Request frames to identify
networks in the area. Passive scanning saves battery power by listening for
Beacon frames.

ChannelList
-----------
Scans must either transmit a Probe Request or listen on a channel for the
existence of a network. 802.11 allows stations to specify a list of channels
to try. Products allow configuration of the channel list in different ways.
What exactly constitutes a channel depends on the physical layer in use.
With direct-sequence products, it is a list of channels.
With frequency-hopping products, it is a hop pattern.

ProbeDelay
----------
This is the delay, in microseconds, before the procedure to probe a channel
in active scanning begins. This delay ensures that an empty or lightly loaded
channel does not completely block the scan.

MinChannelTime and MaxChannelTime
---------------------------------
These values, specified in time units (TUs), specify the minimum and
maximum amount of time that the scan works with any particular channel.

There are two types of scanning: Passive scan and Active scan

Passive Scan:
-------------
Passive scanning saves battery power because it does not require transmitting.
In passive scanning, a station moves to each channel on the channel list
and waits for Beacon frames. Any Beacons received are buffered to extract
information about the BSS that sent them.
In the passive scanning procedure, the station sweeps from channel to channel
and records information from any Beacons it receives. Beacons are designed to
allow a station to find out everything it needs to match parameters with the
basic service set (BSS) and begin communications.
Limitation with a passive scan is that if the client does not wait long enough
on a channel, then the client may miss an AP beacon.

Active Scan:
------------
In active scanning, a station takes a more assertive role. On each channel,
Probe Request frames are used to solicit responses from a network with a
given name. Rather than listening for that network to announce itself,
an active scan attempts to find the network. Stations using active scanning
employ the following procedure for each channel in the channel list:
- Move to the channel and wait for either an indication of an incoming frame
  or for the ProbeDelay timer to expire. If an incoming frame is detected,
  the channel is in use and can be probed. The timer prevents an empty channel
  from blocking the entire procedure; the station won't wait indefinitely for
  incoming frames.
- Gain access to the medium using the basic DCF access procedure and send
  a Probe Request frame.
- Wait for the minimum channel time, MinChannelTime, to elapse.
  - If the medium was never busy, there is no network. Move to the next
    channel.
  - If the medium was busy during the MinChannelTime interval, wait until
    the maximum time, MaxChannelTime, and process any Probe Response frames.
Probe Response frames are generated by networks when they hear a Probe Request
that is searching for the extended service set to which the network belongs.
Probe Request frames can also use a broadcast SSID, which triggers a
Probe Response from all 802.11 networks in the area.
One station in each BSS is responsible for responding to Probe Requests.
The station that transmitted the last Beacon frame is also responsible for
transmitting any necessary Probe Response frames. In infrastructure networks,
the access points transmit Beacons and thus are also responsible for
responding to itinerant stations searching the area with Probe Requests.
IBSSs may pass around the responsibility of sending Beacon frames, so the
station that transmits Probe Response frames may vary. Probe Responses are
unicast management frames and are therefore subject to the positive
acknowledgment requirement of the MAC.
It is common for multiple Probe Responses to be transmitted as a result of
a single Probe Request. The purpose of the scanning procedure is to find
every basic service area that the scanning station can join, so a broadcast
Probe Request results in a response from every access point within range.
Any overlapping independent BSSs may also respond.

The relationship between the transmission of Probe frames and the various
timing intervals that can be configured as part of a scan.
- The scanning station transmits the Probe Request after gaining access to
  the medium. Both access points respond with a Probe Response that reports
  their network's parameters. Note that the second Probe Response is subject
  to the rules of the distributed coordination function and must wait for
  the contention window to elapse before transmitting.
- The first response is transmitted before the minimum response time elapses,
  so the station waits until the maximum response time has elapsed before
  collating the results. In areas with a large number of networks, it may
  be necessary to adjust the maximum channel time so the responses from all
  the access points in the area can be processed.

Active-scan scans for 30 milliseconds once every second, unless either of
the following conditions is true:
- High-priority traffic (voice or video) is present at 64 Kbps or higher.
  In this case, active-scan scans for 30 milliseconds every 60 seconds.
- Heavy data traffic is present at 4 Mbps or higher. In this case,
  active-scan scans for 30 milliseconds every 5 seconds.

Scan Report:
------------
A scan report is generated at the conclusion of a scan. The report lists all
the BSSs that the scan discovered and their parameters. The complete parameter
list enables the scanning station to join any of the networks that it
discovered. In addition to the BSSID, SSID, and BSSType, the
parameters also include:[*]
[*] The items actually exposed by any particular software vary.

Beacon interval (integer): Each BSS can transmit Beacon frames at its own
                           specific interval, measured in TUs.

DTIM period (integer): DTIM frames are used as part of the power saving
                       mechanism.

Timing parameters: Two fields assist in synchronizing the station's timer to
                   the timer used by a BSS. The Time stamp field indicates the
                   value of the timer received by the scanning station; the
                   other field is an offset to enable a station to match timing
                   information to join a particular BSS.

BSSBasicRateSet: The basic rate set is the list of data rates that must be
                 supported by any station wishing to join the network.
                 Stations must be able to receive data at all the rates listed
                 in the set. The basic rate set is composed of the mandatory
                 rates in the Supported Rates information element of
				 management frames.

PHY parameters, CF parameters, and IBSS parameters: These three facets of the
network have their own parameter sets. Channel information is included in the
physical-layer parameters.

Scan-path:
----------
/* Need to write scan path may be code flow like tx/rx path ? */

FAQ's [Scanning procedure]:
---------------------------
a.   Difference between Direct prob and Null/Broadcast prob request ?
Ans: Direct prob request: A client station that is looking for a specific
                          SSID sends a probe request with the SSID field set
                          to the specific SSID. If a directed probe request
                          is sent, all APs that support that specific SSID
                          and hear the request should reply by sending a
                          probe response.
     Null/Broadcast prob request: A client station that is looking for any
                          SSID sends a probe request with the SSID field set
                          to null. If a null probe request is sent, all APs
                          that hear the request should reply by sending a
                          probe response.

b.   Difference between Beacon frame and Probe response frame ?
Ans: The information that is contained inside the body of a probe response
     frame is the same information that can be found in a beacon frame, with
     the exception of the traffic indication map (TIM).

c.   Why we need two types of scanning (Active/Passive) ?
Ans: Passive scan can not find the networks which is configured and enabled
     as hidden ssid but it can scan DFS channel. Active scanning can find
     the hidden network by direct probe request/response.

d.   What Channels Are Scanned?
Ans: RF scanning can be performed on a variety of different sets of channel
     ranges or frequencies. The scan can be configured in the Radio profile
	 to scan either operating channels, regulatory channels, or all channels.
	 In a Radio profile, you can change the channels a radio actively scans.
	 These are the three options for active scanning :
     - Operating: Only the current channel is scanned and audited.
     - Regulatory: Only regulatory channels are scanned and audited. If the
	   radio is configured for 802.11b/g/n, the most commonly used channels,
	   such as 1, 6, or 11, are scanned and audited more frequently.
     - All: All channels are scanned and audited.

2.   What is dfs, how it works? What is slave dfs and master dfs ?
Ans: Wi-Fi networks operate in areas of RF spectrum that require no license
     to operate. One particular service that shares spectrum with wireless
     LANs is radar. Some types of radar installation operate in the 5GHz band
     that is used by Wi-Fi network. This means that they may use some of the
     same frequencies that are used for Wi-Fi networks. This doesn’t apply to
     all radar stations that have been deployed; there are many radar
     installations do not use 5GHz.
     However, due to the coexistence of both radar and Wi-Fi networks in the
     same area of spectrum, the Wi-Fi standard (IEEE 802.11, and dfs added
     as WiFi regulatory specification amendment 80211h) was designed to
     incorporate a spectrum sharing mechanism on 5GHz to ensure that Wi-Fi
     networks do not operate on frequencies (hence causing interference)
     that are used by nearby radar stations. This mechanism is known as
     Dynamic Frequency Selection (DFS) and is designed to mitigate
     interference to 5GHz radar by WLANs.

     How Does DFS Work?
     The main purpose of DFS is to avoid WLAN systems interference with Radar
     systems. If WLAN AP detects a Radar on current operating channel it
     should move to another non Radar detected channel by following set of
     DFS rules and the STA associated to that AP must move to the channel
     designated by AP.

     DFS parameters:
        Parameters                              value
        --------------------------------------------------
        Channel Availability check              60sec
        Channel move time                       10sec
        Channel Closing Transmission Time       1sec
        Non-Occupancy Period                    30minutes
        In-Service Monitoring

     Channel Availability check: Before an AP will use a channel that may be
     impacted by radar, it will perform a “Channel Availability Check” to
     check for radar signals on that channel. The AP will listen for
     60 seconds for the presence of radar signals. If no radar is detected,
     then the channel is designated as being an “Available Channel”.

     In-Service Monitoring: Once an AP is operating on a DFS channel, it has
     to monitor for the presence of radar signals appearing on that channel.
     This is known as “In-Service Monitoring”.
     The AP must continuously monitor its channel for the presence of radar
     signals. If a radar signal is detected, then the AP must cease
     transmissions on the channel within the “Channel Move Time”, which is
     10 seconds in the EU/UK.
     At the end of this period, the AP will have ceased transmissions and
     moved to a new channel.
     Prior to moving channels, some WLAN solutions may provide a
     “Channel Switch Announcement” 802.11 frame to connected clients to
     advise them which channel the AP will be moving to. Support for this on
     both WLAN infrastructure and client equipment seems to be optional from
     my own observations and should not be relied upon as a reliable method
     for clients to find the AP on its new channel.
     Experience shows that there are variations between WLAN solutions around
     which channels an AP will choose to move to when radar is detected. In
     some solutions, APs that detect radar will move to channel 36
	 exclusively. In other solutions, APs will choose to move to any of the
	 available non-DFS channels. Some will jump to any available 5GHz channel
	 they find (DFS or non-DFS). Behavior in this area seems to be
	 inconsistent and is not defined within the 802.11 standard.

     Non-Occupancy Period: Once radar has been detected on a channel, then
     the “Non-Occupancy Period” begins. This is a 30-minute period in which
     no further transmissions will be made by the AP on the affected channel.
     At the end of the 30-minute period, most APs will attempt to return to
     their original channel, subject to a channel availability check.
     (Again behavior in this area varies between vendors)

     Are All 5GHz Channels Subject to DFS?
     No, not all channels in the 5GHz band are subject to DFS. The channels
     that are exempt vary from country to country, as dictated by local
     regulations.
     DFS is applicable on 5GHz channels. The 5GHz band is divided into several
     sections referred to Unlicensed information infrastructure (UNII).
     UNII-1 band is designated for indoor operations.
     UNII-2 and UNII-2e (extended band) for indoor and outdoor operations.
     UNII-3 is intended mainly for Radar products and may be used as indoor
     for long distance RF links WLAN as well.

     Band	      DFS	          Channel	  Frequency (MHz)
     ------------------------------------------------------
     U-NII-1		              36 – 48	  5170 – 5250
     U-NII-2A	  DFS required	  52 – 64	  5250 – 5330
     U-NII-2C	  DFS required    100 – 140	  5490 – 5710
     U-NII-3		              149 – 165	  5735 – 5835

FAQ's [DFS]:
------------
a.   What is Radar ?
Ans: A conventional radar signal is a burst of pulses of a high frequency
     signal. When one burst is over, it is repeated after some duration,
	 called sweep time. ITU has defined several different types of radar based
	 on different frequencies, the number of pulses in a burst, and pulse
	 repetition frequency within the burst. The sweep time is a result of
	 radars that slowly rotate through 360 degrees, so that in a 30-second
	 sweep period, the AP may be hit by the radar signal only for fraction of
	 a second. During this hit, the AP sees a few pulses separated by a time
	 interval (called the period), which is anywhere from 250 microseconds to
	 20 milliseconds. Each pulse can be 2 microseconds or smaller in width.

b.   How Radar can be detected ?
Ans: The AR5210 chip does not have any special mode to listen for and detect
     radar signals. However, it indicates a PHY error when this type of
	 interference hits the receiver while it is receiving the preamble and PLCP
	 header of an 802.11a frame. It can result in indicating a zero length
	 frame to the host if the interference activates the receiver. Any
	 interference that hits the receiver during the payload of the frame causes
	 a CRC error. On AR5210, zero length frame detection and promiscuous mode
	 for receive filter are enabled in the hardware to indicate the PHY errors
	 to the host. The AR5213/AR2313 chips generate a special type of PHY error
	 code when a short width energy pulse is detected, typically generated by
	 radar. On AR5213/AR2313, zero length frame detection and radar PHY error
	 detection is enabled in the hardware to indicate the PHY errors to the
	 host. By turning on only radar PHY errors, number of errors to be processed
	 by the algorithm is lower and probability of false detects is reduced too.
	 The hardware generates an interrupt to the host on every received frame
	 with an error. The characteristics of these errors are classified and used
	 in radar detection.

3.   What is Channel switch announcement
Ans: Once AP detects radar on operating channel, CSA element ID will be
     included in beacons and probe response to instruct the STA to move to
     new channel. CSA Element ID is shown in below figure.
      __________________________________________________________________
     |         |        |                |             |                |
     | Element | Length | Channel switch | New channel | Channel switch |
     |   ID    |        |      mode      |    Number   |      count     |
     |_________|________|________________|_____________|________________|
         1        1             1             1               1

     The slave device should respond to C.S.A element by checking its
     parameters.
      - If Channel switch mode is SET slave device shall stop transmit to AP
      - If Channel switch mode is CLEAR slave doesn't have any dependency on
        AP for its operation.

     Length : set to 3 bytes
     Channel Switch Mode : Indicates any restrictions on transmission until a
     channel switch. An AP in a BSS or a STA in an IBSS sets the Channel
     Switch Mode field to either 0 or 1 on transmission. In an IBSS, the
     Channel Switch  Mode Field is reserved.
     New Channel Number: set to the number of the channel to which the STA
     is moving.
     Channel Switch Count: for nonmesh STAs, this  field either is set to the
     number of TBTTs until the STA sending the Channel Switch Announcement
     element switches to the new channel or is set to 0. A value of 1
	 indicates that the switch occurs immediately before the next
	 TBTT (Target Beacon Transmission Time).
	 A value of 0 indicates that the switch occurs at any time after the
	 frame containing the element is transmitted.

4.   What is MLME state machine
Ans: MLME: Medium access control (MAC) sublayer management entity.
     This is the entity where the MAC state machines reside.
     Examples of states a MLME may assist in reaching:
      1. Authenticate
      2. Deauthenticate
      3. Associate
      4. Disassociate
      5. Reassociate
      6. Beacon
      7. Probe
      8. Timing Synchronization Function (TSF)

	/* Need to explore more about joining phase and all */

5.   Connection procedure and frame exchange
Ans: Access points are bridges that bridge traffic between mobile stations
     and other devices on the network. Before a mobile station can send
     traffic through an AP, it must be in the appropriate connection state.
     The three 802.11 connection states are:
      - Not authenticated or associated.
      - Authenticated but not yet associated.
      - Authenticated and associated.

     A mobile station must be in an authenticated and associated state before
     bridging will occur. The mobile station and AP will exchange a series of
     802.11 management frames in order to get to an authenticated and
     associated state.

    Mobile Station                                             Access Point
          |                                                         |
          |Probe Request                                            |
        1)|-------------------------------------------------------->|
          |                                                         |
          |                                          Probe Response |
        2)|<--------------------------------------------------------|
          |                                                         |
          |Authentication Seq1                                      |
        3)|-------------------------------------------------------->|
          |                                                         |
          |                                     Authentication Seq2 |
        4)|<--------------------------------------------------------|
          |                                                         |
          | Association Request                                     |
        5)|-------------------------------------------------------->|
          |                                                         |
          |                                    Association Response |
        6)|<--------------------------------------------------------|
          |                                                         |
          |                        Data                             |
        7)|<------------------------------------------------------->|
          |                                                         |


     A mobile station starts out as not authenticated and associated.

     1. A mobile station sends probe requests to discover 802.11 networks
     within its proximity. Probe requests advertise the mobile stations
     supported data rates and 802.11 capabilities such as 802.11n. Because
     the probe request is sent from the mobile station to the destination
     layer-2 address and BSSID of ff:ff:ff:ff:ff:ff all AP's that receive it
     will respond.

     2. APs receiving the probe request check to see if the mobile station
     has at least one common supported data rate. If they have compatible data
     rates, a probe response is sent advertising the SSID
     (wireless network name), supported data rates, encryption types if
     required, and other 802.11 capabilities of the AP.
     A mobile station chooses compatible networks from the probe responses
     it receives. Compatibility could be based on encryption type.
     Once compatible networks are discovered the mobile station will attempt
     low-level 802.11 authentication with compatible APs.
     Keep in mind that 802.11 authentication is not the same as WPA2 or 802.1X
     authentication mechanisms which occur after a mobile station is
     authenticated and associated. Originally 802.11 authentication frames
     were designed for WEP encryption however this security scheme has been
     proven to be insecure and therefore deprecated. Because of this 802.11
     authentication frames are open and almost always succeed.

     3. A mobile station sends a low-level 802.11 authentication frame to an
     AP setting the authentication to open and the sequence to 0x0001.

     4. The AP receives the authentication frame and responds to the mobile
     station with authentication frame set to open indicating a sequence of
     0x0002.
     If an AP receives any frame other than an authentication or probe request
     from a mobile station that is not authenticated it will respond with a
     deauthentication frame placing the mobile into an unauthenticated an
     unassociated state. The station will have to begin the association
	 process from the low level authentication step. At this point the mobile
	 station is authenticated but not yet associated. Some 802.11 capabilities
	 allow a mobile station to low-level authenticate to multiple APs.
	 This speeds up the association process when moving between APs.
	 A mobile station can be 802.11 authenticated to multiple APs however it
	 can only be actively associated and transferring data through a single
	 AP at a time.

     5. Once a mobile station determines which AP it would like to
     associate to, it will send an association request to that AP. The
     association request contains chosen encryption types if required and
     other compatible 802.11 capabilities.
     If an AP receives a frame from a mobile station that is authenticated
     but not yet associated, it will respond with a disassociation frame
     placing the mobile into an authenticated but unassociated state.

     6. If the elements in the association request match the capabilties of
     the AP, the AP will create an Association ID for the mobile station and
     respond with an association response with a success message granting
     network access to the mobile station.

     7. Now the mobile station is successfully associated to the AP and
     data transfer can begin.

     Note: If WPA/WPA2 or 802.1X authentication is required on the wireless
     network, the mobile station will not be able to send data until dynamic
     keying and authentication have taken place after the 802.11 Association
     is complete.

6.   4-way handshake
Ans: The 4-way handshake is the process of exchanging 4 messages between an
     access point (authenticator) and the client device (supplicant) to
     generate some encryption keys which can be used to encrypt actual data
     sent over Wireless medium. These keys which are generated through 4-way
     handshake are generated by some source key material.
     The 4-Way Handshake uses four EAPOL-Key frame messages between the
     authenticator and the supplicant for six major purposes:
       - Confirm the existence of the PMK at the peer station.
       - Ensure that the PMK is current.
       - Derive a new pairwise transient key from the PMK.
       - Install the PTK on the supplicant and the authenticator.
       - Transfer the GTK from the authenticator to the supplicant and install
         the GTK on the supplicant and, if necessary, the authenticator.
       - Confirm the selection of the cipher suites
     There are some key terminology which is using in 4 way handshake i.e:
       - MSK-Master Session Key ( or AAA Key):
         Key information that is jointly negotiated between the Supplicant &
         Authentication Server. This key information is transported via a
         secure channel from Authenticating Server to Authenticator.
       - PMK-Pairwise Master Key:
         PMK is derived from MSK seeding material. PMK is first 256bits
         (0-255) of MSK. It can be derived from an EAP method or directly
         from a PresharedKey(PSK).
       - GMK-Group Master Key:
         GMK is randomly created on Authenticator & refresh it in configured
         time interval to reduce the risk of GMK being compromised.
       - PTK-Pairwise Transient Key:
         A value derived from PMK, Authenicator nonce(Anonce), Supplicant
         nonce(Snonce), Authenticator Address, Supplicant Address. This is
         used to encrypt all unicast transmission between client & an AP.
         The client and access point will derive their own separate pairwise
         transient key (PTK). The PTK is derived from each device’s pairwise
         master key (PMK).
         PTK = PRF (PMK + Anonce + SNonce + Mac (AA)+ Mac (SA))
         PTK consist of 5 different keys:
         1. KCK (Key Confirmation Key): used to provide data integrity during
            4 -Way Handshake & Group Key Handshake.
         2. KEK (Key Encryption Key): used by EAPOL-Key frames to provide data
            privacy during 4-Way Handshake & Group Key Handshake.
         3. Temporal Key: used to encrypt & decrypt MSDU of 802.11 data
            frames between supplicant & authenticator
         4. Temporal MIC-1
         5. Temporal MIC-2
       - GTK-Group Temporal Key:
         GTK is used to encrypt all broadcast/multicast transmission between
         an AP & multiple client statsions. GTK is derived on Authenticator &
         sending to supplicant during 4-Way Handshake (M3)

     In case of 802.1X/EAP authentication, when the access point sends an
     EAP-Success frame and the AP can now initiate the 4-Way Handshake. Keep
     in mind that the authentication process has already generated the
     master keys (PMK and GMK), which will be used by the 4-Way Handshake to
     derive the temporal keys.
     In case of WPA2-psk 4 way handshak starts immediately after Open System
     Authentication & Association state finish.

     STA/Supplicant                                          AP/Authenicator
            |                                                       |
            |                          Message1: EAPOL-key (Anonce) |
Derive PTK  |<------------------------------------------------------|
            |                                                       |
            | Message2: EAPOL-key (Snonce, RSNE, MIC)               |
            |------------------------------------------------------>|Derive
            |                                                       |PTK and
            |               Message3: EAPOL-key (Install PTK, RSNE, |GTK
            |                                    MIC, Encryted GTK) |
            |<------------------------------------------------------|if needed
            |                                                       |
            | Message3: EAPOL-key (MIC)                             |
Install PTK |<------------------------------------------------------|
and GTK     |                                                       |

     4-way handshak frame exchange:
       - M1: The authenticator and supplicant each randomly create their
         respective nonces. The authenticator sends an EAPOL-Key frame
         containing an ANonce to the supplicant. The supplicant now has all
         the necessary inputs for the pseudorandom function. The supplicant
         derives a PTK from the PMK, ANonce, SNonce, and MAC addresses.
         The supplicant is now in possession of a pairwise transient key that
         can be used to encrypt unicast traffic.
       - M2: The supplicant sends an EAPOL-Key frame containing an SNonce to
         the authenticator. The authenticator now has all the necessary inputs
         for the pseudorandom function. The supplicant also sends its RSN
         information element capabilities to the authenticator and a message
         integrity code (MIC). The authenticator derives a PTK from the PMK,
         ANonce, SNonce, and MAC addresses. The authenticator also validates
         the MIC. The authenticator is now in possession of a pairwise
         transient key that can be used to encrypt unicast traffic.
       - M3: If necessary, the authenticator derives a GTK from the GMK.
         The authenticator sends an EAPOL-Key frame to the supplicant
         containing the ANonce, the authenticator’s RSN information element
         capabilities, and an MIC. The EAPOL-Key frame may also contain a
         message to the supplicant to install the temporal keys. Finally,
         the GTK will be delivered inside this unicast EAPOL-Key frame to the
         supplicant. The confidentiality of the GTK is protected because it
         will be encrypted with the PTK.
       - M4: The supplicant sends the final EAPOL-Key frame to the
         authenticator to confirm that the temporal keys have been installed.
       - IEEE 802.1X Controlled Port Unblocked

7.   Data and management path
Ans: Data Path: Corresponds to ieee80211 data frames
     TX Path:
     --------
     - User space Application -> Create Socket -> Bind it to interface
       (e.g.: Ethernet or Wifi) -> Put content into sk_buff & send it

     - Then it pass through Network Protocol Block, we'll talk about it later.
     - After that packets land up in device agnostic layer, which links
       various hardware devices (e.g. Ethernet, WiFi) to different network
       protocols.
     - The interfacing is via struct net_device_ops, which has a long list of
       net_device operations. Particularly for transmit:
       netdev_tx_t(*ndo_start_xmit) (struct sk_buff *skb,
                                     struct net_device *dev);
     - To send the packet, the skb is passed to a function called
       dev_queue_xmit.
     - it eventually invokes ops->ndo_start_xmit(skb, dev). This is exactly
       the API handler that Ethernet device drivers need to register. But in
       case of WIFI it's mac80211 that registers itself with netdev_ops.
     - So mac80211 appears as netdev_ops invokes transmit handler
	   ieee80211_subif_start_xmit to transmit a packet.
     - ieee80211_subif_start_xmit (tx.c)
         -- Adds the 802.11 header.
         -- Initializes transmission time in dev->trans_start
     - ieee80211_xmit (tx.c)
         -- Makes headroom for encryption
     - ieee80211_set_qos_header (wme.c)
         -- Sets TID in Wi-Fi header according to skb->priority.
     - ieee80211_tx (tx.c)
         -- Obtains the proper transmission queue.
         -- Prepares transmission
         -- If the packet can not be transmitted, it is
		    queued->timestamp queue entry.
         -- Queues are maintained per sub-interface, in the structure qdata[4]
            in ieee80211_sub_if_data.
         -- Calls drv_tx() to pass the frame to the actual driver for
            transmission
     - drv_tx (driver-ops.h) [in Mac0211]
         -- This is the entry point to the actual driver!
         -- It is called for each packet to be transmitted.
         -- Receives struct ieee80211_local
         -- Receives the sk_buff (the data)
     - drv_tx() [in mac80211]
         -- The ath9k driver registers the functions to interface with
            mac80211 in struct ieee80211_ops ath9k_ops. The input of this
            struct is then loaded in mac80211 using the function
            ieee80211_alloc_hw() in main.c of mac80211.
         -- The function interfacing with drv_tx() is ath9k_tx().
         -- The common data also contains other info like the number of
            hw queues.
     - ath9k_tx() (main.c)
        -- Loads details of the hardware in struct ath_softc.
        -- Updates the PM bit (not set by mac80211).
        -- Wakes up hardware if it was sleeping.
        -- Uses data struct ath_tx_control to track the status of the
           transmission.
        -- Starts transmission in ath_tx_start()
     - ath_tx_start() (xmit.c)
        -- Receives a pointer to an struct ath_tx_control containing a pointer
           to the queue that contains the frame?
        -- If the destination is HT capable tries aggregation.
     - ath_tx_send_ampdu() (xmit.c)
        -- if the destination is HT capable tries aggregation.
     - ath_tx_send_normal() (xmit.c)
        -- if the destination is not support HT mode.
     - ath_tx_txqaddbuf() (xmit.c)
        -- Receives as parameter a txq, then inserts the frame into the
           outbound list, and sends it out to the hardware. The hardware
           physical queues seem to support only 8 frames!
        -- If the packet can not be inserted in the physical queue then it is
           held here.
     - ath9k_hw_txstart() (mac.c)
        -- Writes the proper register in the hardware to trigger the
           transmission in a given queue.
        -- The hardware is the one performing the CSMA-CA according to the
           configured parameters on that queue.

     RX Path:
     --------
     - When receiving a packet, and also for other reasons, the hardware sends
       an interruption that ath9k has previously registered. The function in
       charge of handling the interruption seems to be irqreturn_t ath_isr in
       main.c. This function discovers the type of interruption and asks the
       kernel to schedule the execution of a tasklet, ath9k_tasklet in main.c.
       This function in turn calls the the receive tasklet ath_rx_tasklet().
     - ath_rx_tasklet (recv.c)
        -- Obtains the frame header.
        -- Obtains the current tsf(Time Synchronization Function) value.
        -- Records info about received packet in struct ieee80211_rx_status.
           --- u64 mactime: value in microseconds of the 64-bit Time
               Synchronization Function (TSF) timer when the first data
               symbol (MPDU) arrived at the hardware.
           --- enum ieee80211_band band;
           --- int rate_idx;
           --- unsigned int rx_flags;
        -- Insert received data in the receive buffer.
        -- Creates a new skb to contain the received data.
           --- ath9k_rx_skb_preprocess (recv.c)
               ---- Checks if the received data has CRC errors and in that
                    case drops it. However, crypto errors are still passed up
                    to mac80211.
               ---- Populates ath_rx_status.
           --- ath9k_rx_skb_postprocess (recv.c)
               ---- Remove padding from the received header.
        -- Passes the skb to ieee80211_rx().

     - ieee80211_rx() (mac80211 rx.c)
        -- This is the entry point to mac80211.
        -- Removes the radiotap header.
           --- ieee80211_parse_qos() (x.c)
               ---- Parses QoS from header.
        -- Decides if this packet is addressed to this interface or to
           another STA in the BSS.
        -- Calls ieee80211_prepare_and_rx_handle()
     - ieee80211_prepare_and_rx_handle()
        -- Receives as input an ieee80211_rx_data.
        -- Calls the rx handlers.
     - ieee80211_rx_handlers(rx.c)
        -- Among other calls the following functions:
        -- ieee80211_rx_h_decrypt
        -- ieee80211_rx_h_check_more_data
        -- ieee80211_rx_h_sta_process
        -- ieee80211_rx_h_data
        -- ieee80211_rx_h_ctrl
        ...
        -- This is also where the data path and management path are divided.
           If the received frame is of type data, it is translated into 802.3
           frame (by __ieee80211_data_to8023) and is delivered to the
           networking stack via netif_receive_skb. From then on, the network
           protocol block will parse and decode the protocol header.
           If the received frame is of type management, it is processed in
           ieee80211_sta_rx_queued_mgmt. Some management frames end in
           mac80211, and some are further passed up to cfg80211 and sent to
           user space management tools. For example authentication frames are
           further processed by cfg80211_rx_mlme_mgmt and sent to user space
           via nl80211_send_rx_auth, and association response frames are
           processed by cfg80211_rx_assoc_resp and sent to user space via
           nl80211_send_rx_assoc.


     Management Path: Corresponds to ieee80211 management frames
     There is not much difference between communication path for Data &
     Management frames.
     For Management frames, we got some user space tools e.g.: wpa_supplicant,
     hostapd etc.
     Wpa_supplicant controls the wireless connection for client STAs such as
     scan, authentication, and association. and hostapd functions as AP
     These tools use netlink socket to communicate with kernel.
     All handlers related to netlink socket are defined in nl80211 & cfg80211.
     The user space tool invokes the send handlers in netlink library to send
     the command.
     In kernel space, the command is received by nl80211, which has the
     mapping between command (.cmd) and action (.doit) in static
     struct genl_ops nl80211_ops.
     For the example of triggering scan, the scan request is passed from
     cfg80211 to mac80211 via the scan handler that mac80211 has registered
     with cfg80211 in struct cfg80211_ops:

     const struct cfg80211_ops mac80211_config_ops = {
                                                      .scan = ieee80211_scan,
     };

     In mac80211, ieee80211_scan will take over the scanning process:
     -- ieee80211_scan_state_send_probe
     -- ieee80211_send_probe_req
     -- ieee80211_tx_skb_tid_band
     -- ieee80211_xmit
     -- ieee80211_tx
     -- ieee80211_tx_frags
     -- drv_tx

8.   CSMA/CA and CSMA/CD
Ans: The basic principles of CSMA/CA are:
     Carrier Sense to detect incoming transmissions
     Clear Channel Assessment (CCA) and Network Allocation Vector (NAV) to
     determine if the medium is idle and it is acceptable for the station to
     transmit a frame Positive acknowledgement of frames to pro-actively avoid
     collisions since wireless receivers cannot passively determine if a
     collision has occurred as the RF energy is dispersed. This is in contrast
     to wired Ethernet’s use of CSMA/CD and collision detection where the
     receiver is able to detect collisions since the energy is reflected
     through the wire back to the transmitter.

9.   MAC Access Modes and Timing
Ans: Access to the wireless medium is controlled by coordination functions.
     Ethernet-like CSMA/CA access is provided by the distributed coordination
     function (DCF). If contention-free service is required, it can be provided
     by the point coordination function (PCF), which is built on top of the
     DCF. Contention-free services are provided only in infrastructure
     networks, but quality of service may be provided in any network that has
     HCF support in the stations.
     The coordination functions are described in the following list:
       DCF: The DCF is the basis of the standard CSMA/CA access mechanism.
            Like Ethernet, it first checks to see that the radio link is clear
            before transmitting. To avoid collisions, stations use a
            random backoff after each frame, with the first transmitter
            seizing the channel. In some circumstances, the DCF may use the
            CTS/RTS clearing technique to further reduce the possibility of
            collisions.
       PCF: Point coordination provides contention-free services. Special
            stations called point coordinators are used to ensure that the
            medium is provided without contention. Point coordinators reside
            in access points, so the PCF is restricted to infrastructure
            networks. To gain priority over standard contention-based services,
            the PCF allows stations to transmit frames after a shorter
            interval.
       HCF: Some applications need to have service quality that is a step
            above best-effort delivery, but the rigorous timing of the PCF is
            not required. The HCF allows stations to maintain multiple service
            queues and balance access to the wireless medium in favor of
            applications that require better service quality. The HCF is not
            fully standardized yet, but is being produced as part of the
            eventual 802.11e specification.

/* Need to complete */




10.  How QoS packets are queud and transmitted
Ans: Quality of Service (QoS) is a suite of technologies used to manage
     bandwidth usage as data crosses computer networks. Its most common use is
     fo protection of real-time and high priority data applications. QoS
     technologies, or tools, each have specific rolls used in conjunction with
     one another to build end-to-end network QoS policies.
     Two most common QoS tools used to handle traffic are classification and
     queuing. Classification identifies and marks traffic to ensure network
     devices know how to identify and prioritize data as it traverses a
     network. Queues are buffers in devices that hold data to be processed.
     Queues provide bandwidth reservation and prioritization of traffic as it
     enters or leaves a network device. If the queues are not emptied, they
     overflow and drop traffic.
